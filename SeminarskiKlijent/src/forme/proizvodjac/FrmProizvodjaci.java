/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.proizvodjac;

import domen.OpstiDomenskiObjekat;
import domen.Proizvodjac;
import helper.Helper;
import java.awt.BorderLayout;
import java.awt.Window;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import komunikacija.Komunikacija;
import konstante.Konstante;
import transfer.KlijentTransferObjekat;
import transfer.ServerTransferObjekat;

/**
 *
 * @author Jovan
 */
public class FrmProizvodjaci extends javax.swing.JPanel {

    /**
     * Creates new form FrmProizvodjaci
     */
    int brojac;

    public FrmProizvodjaci() throws Exception {
        initComponents();
        srediFormu();
        brojac = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonIzmeni = new javax.swing.JButton();
        jButtonObrisi = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        jButtonObrisi.setText("Obriši");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonIzmeni)
                        .addGap(15, 15, 15)
                        .addComponent(jButtonObrisi)
                        .addGap(0, 239, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonObrisi)
                    .addComponent(jButtonIzmeni))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        int red = jTable1.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Odaberite red!");
        } else {
            try {
                ProizvodjacTableModel model = (ProizvodjacTableModel) jTable1.getModel();
                Proizvodjac pr = (Proizvodjac) model.vratiProizvodjaca(red);
                Helper.getInstance().put("pr", pr);
                FrmProizvodjacUnos f = new FrmProizvodjacUnos(this);
                Window w = SwingUtilities.getWindowAncestor(FrmProizvodjaci.this);
                JDialog dialog = new JDialog((JDialog) w, "Izmena proizvođača", true);
                dialog.setLayout(new BorderLayout());
                dialog.add(f, BorderLayout.CENTER);
                dialog.pack();
                JOptionPane.showMessageDialog(dialog, "Proizvođač je učitan");
                dialog.setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da učita podatke o proizvođaču");
            }

        }
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        int red = jTable1.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Odaberite red!");
        } else {
            try {
                ProizvodjacTableModel model = (ProizvodjacTableModel) jTable1.getModel();
                Proizvodjac p = (Proizvodjac) model.vratiProizvodjaca(red);
                KlijentTransferObjekat kto = new KlijentTransferObjekat();
                kto.setOperacija(Konstante.OBRISI_PROIZVODJACA);
                kto.setParametar(p);
                Komunikacija.getInstance().posaljiZahtev(kto);
                ServerTransferObjekat sto = Komunikacija.getInstance().procitajOdgovor();
                if (sto.getRezultat() == Konstante.REZULTAT_NOK) {
                    throw new Exception(sto.getIzuzetak());
                }
                JOptionPane.showMessageDialog(this, "Proizvođač je obrisan!");
                model.obrisiRed(red);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da obriše proizvođača");
            }
        }
    }//GEN-LAST:event_jButtonObrisiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
        public void srediFormu() throws Exception {
        KlijentTransferObjekat kto = new KlijentTransferObjekat();
        kto.setOperacija(Konstante.VRATI_PROIZVODJACE);
        Komunikacija.getInstance().posaljiZahtev(kto);
        ServerTransferObjekat sto = Komunikacija.getInstance().procitajOdgovor();
        if (sto.getRezultat() == Konstante.REZULTAT_NOK) {
            throw new Exception(sto.getIzuzetak());
        }
        List<OpstiDomenskiObjekat> lp = (List<OpstiDomenskiObjekat>) sto.getOdgovor();

        ProizvodjacTableModel model = new ProizvodjacTableModel(lp);
        jTable1.setModel(model);
    }

    public JTable vratiTabelu() {
        return jTable1;
    }

}
