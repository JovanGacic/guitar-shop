/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.racun;

import domen.OpstiDomenskiObjekat;
import domen.Racun;
import helper.Helper;
import java.awt.BorderLayout;
import java.awt.Window;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import komunikacija.Komunikacija;
import konstante.Konstante;
import transfer.KlijentTransferObjekat;
import transfer.ServerTransferObjekat;

/**
 *
 * @author Jovan
 */
public class FrmRacuni extends javax.swing.JPanel {

    /**
     * Creates new form FrmProizvodjaci
     */
    public FrmRacuni() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldPretraga = new javax.swing.JTextField();
        jButtonTrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonPrikaz = new javax.swing.JButton();
        jButtonStorniraj = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("Pretraga:");

        jButtonTrazi.setText("Traži");
        jButtonTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTraziActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonPrikaz.setText("Prikaz");
        jButtonPrikaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrikazActionPerformed(evt);
            }
        });

        jButtonStorniraj.setText("Storniraj");
        jButtonStorniraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStornirajActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 2, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 153));
        jLabel2.setText("Kriterijumi: datum (yyyy-MM-dd)/ iznos / prodavac");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonTrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonPrikaz, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonStorniraj, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jButtonTrazi)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPrikaz)
                    .addComponent(jButtonStorniraj))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTraziActionPerformed
        try {
            String kriterijum = jTextFieldPretraga.getText();
            KlijentTransferObjekat kto = new KlijentTransferObjekat();

            kto.setOperacija(Konstante.VRATI_RACUNE_SA_PRETRAGOM);
            List<Object> parametri = new ArrayList<>();
            parametri.add(kriterijum);
            parametri.add(new Racun());
            kto.setParametar(parametri);
            Komunikacija.getInstance().posaljiZahtev(kto);
            ServerTransferObjekat sto = Komunikacija.getInstance().procitajOdgovor();
            if (sto.getRezultat() == Konstante.REZULTAT_NOK) {
                throw new Exception(sto.getIzuzetak());
            }
            List<OpstiDomenskiObjekat> lr = (List<OpstiDomenskiObjekat>) sto.getOdgovor();
            if (!lr.isEmpty()) {
                srediFormu(lr);
                JOptionPane.showMessageDialog(this, "Sistem je pronašao račune.");
            } else {
                srediFormu(new ArrayList<>());
                JOptionPane.showMessageDialog(this, "Sistem nije pronašao račune.");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem nije pronašao račune.");

        }
    }//GEN-LAST:event_jButtonTraziActionPerformed

    private void jButtonPrikazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrikazActionPerformed
        int red = jTable1.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Odaberite red!");
        } else {
            try {
                RacuniTableModel model = (RacuniTableModel) jTable1.getModel();
                Racun r = (Racun) model.vratiRacun(red);

                KlijentTransferObjekat kto = new KlijentTransferObjekat();
                kto.setOperacija(Konstante.VRATI_RACUN);
                kto.setParametar(r);

                Komunikacija.getInstance().posaljiZahtev(kto);
                ServerTransferObjekat sto = Komunikacija.getInstance().procitajOdgovor();
                if (sto.getRezultat() == Konstante.REZULTAT_NOK) {
                    throw new Exception(sto.getIzuzetak());
                }
                r = (Racun) sto.getOdgovor();

                Helper.getInstance().put("r", r);
                FrmRacunUnos f = new FrmRacunUnos();
                Window w = SwingUtilities.getWindowAncestor(FrmRacuni.this);
                JDialog dialog = new JDialog((JDialog) w, "Prikaz računa", true);
                dialog.setLayout(new BorderLayout());
                dialog.add(f, BorderLayout.CENTER);
                dialog.pack();
                dialog.setVisible(true);
                while (dialog.isVisible()) {

                }
                jButtonTraziActionPerformed(evt);
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
                JOptionPane.showMessageDialog(this, "Sistem ne može da učita račun");
            }
        }
    }//GEN-LAST:event_jButtonPrikazActionPerformed

    private void jButtonStornirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStornirajActionPerformed
        int red = jTable1.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Odaberite red!");
        } else {
            try {
                RacuniTableModel model = (RacuniTableModel) jTable1.getModel();
                Racun r = (Racun) model.vratiRacun(red);
                KlijentTransferObjekat kto = new KlijentTransferObjekat();
                kto.setOperacija(Konstante.STORNIRAJ_RACUN);
                kto.setParametar(r);
                Komunikacija.getInstance().posaljiZahtev(kto);
                ServerTransferObjekat sto = Komunikacija.getInstance().procitajOdgovor();
                if (sto.getRezultat() == Konstante.REZULTAT_NOK) {
                    throw new Exception(sto.getIzuzetak());
                }
                JOptionPane.showMessageDialog(this, "Račun je storniran!");
                model.obrisiRed(red);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Račun nije storniran!");
            }
        }
    }//GEN-LAST:event_jButtonStornirajActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPrikaz;
    private javax.swing.JButton jButtonStorniraj;
    private javax.swing.JButton jButtonTrazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldPretraga;
    // End of variables declaration//GEN-END:variables
    private void srediFormu(List<OpstiDomenskiObjekat> lr) throws Exception {

        RacuniTableModel model = new RacuniTableModel(lr);
        jTable1.setModel(model);
    }

    public JTable vratiTabelu() {
        return jTable1;
    }

}
